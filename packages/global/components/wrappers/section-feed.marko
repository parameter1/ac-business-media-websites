import defaultValue from "@parameter1/base-cms-marko-core/utils/default-value";
import { get } from "@parameter1/base-cms-object-path";
import queryFragment from "@parameter1/base-cms-marko-web-theme-monorail/graphql/fragments/section-feed-block";

$ const {
  config,
  pagination: p,
  req,
  GAM
} = out.global;

$ const withPagination = defaultValue(input.withPagination, true);
$ const perPage = 12;
$ const skip = p.skip({ perPage });

$ const { noRail, modifiers } = input;
$ const path = input.path || input.alias || req.path;
$ const withAds = GAM ? defaultValue(input.withAds, true) : false;
$ const withFeedAds = GAM ? defaultValue(input.withFeedAds, false) : false;
$ const withPageHero = defaultValue(input.withPageHero, false);
$ const aboveTheFold = defaultValue(input.aboveTheFold, false);
$ const queryName = input.queryName ? input.queryName : "website-scheduled-content";
$ const queryParams = {
  queryFragment,
  ...input.queryParams,
  ...(new Set(["website-scheduled-content", "website-optioned-content"]).has(queryName) && {
    sectionAlias: input.alias,
  }),
};

<!-- only on page#1 and with single rail for now -->
$ const chunkLengths = withPageHero &&  p.page === 1 && (input.rails && input.rails.length === 1) ? [6, 3, 3] : [3, 3, 3, 3];
$ const limit = chunkLengths.reduce((n, length) => (n + length), 0);
$ const params = { ...queryParams, limit, skip };

<marko-web-query|{ nodes }| name=queryName params=params>
  $ const nodeGroups = chunkLengths.reduce((chunked, length, index) => {
    const start = length * index;
    const end = start + length;
    chunked.push(nodes.slice(start, end));
    return chunked;
  }, []);

  <if(input.rails && input.rails.length === 1)>
    <if(p.page === 1 && withPageHero)>
      <global-section-hero-block nodes=nodeGroups[0] aliases=input.aliases />
      <if(withAds)>
        <div class="row">
          <div class="col-lg-12 mb-block">
            <theme-gam-define-display-ad
              name="top-leaderboard"
              position="section-page"
              aliases=input.aliases
              modifiers=[]
            />
          </div>
        </div>
      </if>
      <global-recommended-block section-alias=input.alias >
        <@native-x indexes=[3] name="default" aliases=input.aliases />
      </global-recommended-block>
      <if(withAds)>
        <div class="row">
          <div class="col-lg-12 mb-block">
            <theme-gam-define-display-ad
              name="leaderboard"
              position="section-page"
              aliases=input.aliases
              modifiers=[]
            />
          </div>
        </div>
      </if>
      <div class="row">
        <div class="col-lg-8">
          $ const page1NodeGroups = nodeGroups.slice(1);
          <for|nodeGroup, index| of=page1NodeGroups>
            $ const isLast = index === page1NodeGroups.length - 1;
            $ const header = index === 0 ? input.header : null;
            $ const adName = index === 0 ? input.adName || "top-rotation" : input.adName || "rotation";
            $ const flowInput = (index === 0 && aboveTheFold) ? { ...input.flow, lazyload: false } : input.flow;
            $ const nativeX = index === 0 ? input.nativeX : undefined;
            <if((input.alias === "expert-columns") && get(config, "websiteContext.id") === '53ca8d671784f8066eb2c949')>
              <marko-web-query|{ nodes }| name="website-optioned-content" params={
                queryFragment,
                optionName: ["Standard", "Pinned"],
                includeContentIds: [22106209]
                }
              >
                $ const finalNodeGroup = isLast ? nodeGroup : [...nodes, ...nodeGroup];
                <section-feed-flow
                  nodes=finalNodeGroup
                  header=header
                  modifiers=modifiers
                  node=input.node
                  node-list=input.nodeList
                  aliases=input.aliases
                  flow=flowInput
                  with-ads=(!isLast && withFeedAds)
                  ad-name=adName
                  native-x=nativeX
              />
              </marko-web-query>
            </if>
            <else>
              <section-feed-flow
                nodes=nodeGroup
                header=header
                modifiers=modifiers
                node=input.node
                node-list=input.nodeList
                aliases=input.aliases
                flow=flowInput
                with-ads=(!isLast && withFeedAds)
                ad-name=adName
                native-x=nativeX
              />
            </else>
          </for>
          <if(withPagination)>
            <theme-section-feed-block|{ totalCount }| alias=input.alias query-name=queryName count-only=true>
              <@query-params ...queryParams />
              <theme-pagination-controls
                per-page=limit
                total-count=totalCount
                path=path
              />
            </theme-section-feed-block>
          </if>
        </div>
        <div class="col-lg-4">
          <${input.rails[0].renderBody} />
        </div>
      </div>
    </if>
    <else>
      <div class="row">
        <div class="col-lg-8">
          <for|nodeGroup, index| of=nodeGroups>
            $ const isLast = index === nodeGroups.length - 1;
            $ const header = index === 0 ? input.header : null;
            $ const adName = index === 0 ? input.adName || "top-rotation" : input.adName || "rotation";
            $ const flowInput = (index === 0 && aboveTheFold) ? { ...input.flow, lazyload: false } : input.flow;
            $ const nativeX = index === 0 ? input.nativeX : undefined;
            <section-feed-flow
              nodes=nodeGroup
              header=header
              modifiers=modifiers
              node=input.node
              node-list=input.nodeList
              aliases=input.aliases
              flow=flowInput
              with-ads=(!isLast && withFeedAds)
              ad-name=adName
              native-x=nativeX
            />
          </for>
          <if(withPagination)>
            <theme-section-feed-block|{ totalCount }| alias=input.alias query-name=queryName count-only=true>
              <@query-params ...queryParams />
              <theme-pagination-controls
                per-page=limit
                total-count=totalCount
                path=path
              />
            </theme-section-feed-block>
          </if>
        </div>
        <div class="col-lg-4">
          <${input.rails[0].renderBody} />
        </div>
      </div>
    </else>
    <if(withAds)>
      <div class="row">
        <div class="col-lg-12">
          <theme-gam-define-display-ad
            name="leaderboard"
            position="section-page"
            aliases=input.aliases
            modifiers=[]
          />
        </div>
      </div>
    </if>
  </if>
  <else-if(noRail)>
    <div class="row">
      <div class="col-lg-12">
        <for|nodeGroup, index| of=nodeGroups>
          $ const isLast = index === nodeGroups.length - 1;
          $ const header = index === 0 ? input.header : null;
          $ const adName = index === 0 ? input.adName || "top-rotation" : input.adName || "rotation";
          $ const flowInput = (index === 0 && aboveTheFold) ? { ...input.flow, lazyload: false } : input.flow;
          $ const nativeX = index === 0 ? input.nativeX : undefined;
          <section-feed-flow
            nodes=nodeGroup
            header=header
            modifiers=modifiers
            node=input.node
            node-list=input.nodeList
            aliases=input.aliases
            flow=flowInput
            with-ads=withFeedAds
            ad-name=adName
            native-x=nativeX
          />
        </for>
        <if(withPagination)>
          <theme-section-feed-block|{ totalCount }| alias=input.alias query-name=queryName count-only=true>
            <@query-params ...queryParams />
            <theme-pagination-controls
              per-page=limit
              total-count=totalCount
              path=path
            />
          </theme-section-feed-block>
        </if>
      </div>
    </div>
  </else-if>
  <else>
    $ const topNodeGroups = nodeGroups.slice(0, 2);
    $ const bottomNodeGroups = nodeGroups.slice(2);
    <div class="row">
      <div class="col-lg-8">
        <for|nodeGroup, index| of=topNodeGroups>
          $ const header = index === 0 ? input.header : null;
          $ const adName = index === 0 ? input.adName || "rotation" : null;
          $ const flowInput = (index === 0 && aboveTheFold) ? { ...input.flow, lazyload: false } : input.flow;
          $ const nativeX = index === 0 ? input.nativeX : undefined;
          <section-feed-flow
            nodes=nodeGroup
            header=header
            modifiers=modifiers
            node=input.node
            node-list=input.nodeList
            aliases=input.aliases
            with-ads=withFeedAds
            ad-name=adName
            flow=flowInput
            native-x=nativeX
          />
        </for>
      </div>
      <div class="col-lg-4">
        <if(input.rails && input.rails[0])>
          <${input.rails[0].renderBody} />
        </if>
        <else>
          <marko-web-identity-x-context|{ hasUser }|>
            <if(!hasUser)>
              <div class="mb-block">
                <global-follow-us-block aliases=input.aliases />
                <!-- <global-identity-x-newsletter-form-inline with-image=false type="inlineContent" /> -->
              </div>
            </if>
            <else>
              <div class="mb-block sticky-top">
                <theme-gam-define-display-ad
                  name="top-rotation"
                  position="content_page"
                  aliases=input.aliases
                  modifiers=["max-width-300", "center", "margin-auto-x", "rail"]
                  class="mb-0"
                />
              </div>
            </else>
          </marko-web-identity-x-context>
        </else>
      </div>
    </div>

    <div class="row">
      <div class="col-lg-8">
        <for|nodeGroup, index| of=bottomNodeGroups>
          $ const isLast = index === bottomNodeGroups.length - 1;
          <section-feed-flow
            nodes=nodeGroup
            modifiers=modifiers
            node=input.node
            node-list=input.nodeList
            aliases=input.aliases
            with-ads=(!isLast && withFeedAds)
            flow=input.flow
          />
        </for>
        <if(withPagination)>
          <theme-section-feed-block|{ totalCount }| alias=input.alias query-name=queryName count-only=true>
            <@query-params ...queryParams />
            <theme-pagination-controls
              per-page=limit
              total-count=totalCount
              path=path
            />
          </theme-section-feed-block>
        </if>
      </div>
      <div class="col-lg-4">
        <if(input.rails && input.rails[1])>
          <${input.rails[1].renderBody} />
        </if>
        <else>
          <theme-client-side-most-popular-list-block class="sticky-top" limit=5 />
        </else>
      </div>
    </div>
    <if(withAds)>
      <div class="row">
        <div class="col-lg-12">
          <theme-gam-define-display-ad
            name="leaderboard"
            position="section-page"
            aliases=input.aliases
            modifiers=[]
          />
        </div>
      </div>
    </if>
  </else>
</marko-web-query>
